server.port: 8080

spring:
  application.name: gateway

authorization.server.url: http://weather-cloud-security:9000
gateway.server.url: http://weather-cloud-gateway:8080
weatherapi.server:
  host: weather-cloud-api
  port: 9090

spring.cloud.discovery:
  enabled: true
  client.simple.instances:
    weather-api:
    - instance-id: weather-api
      service-id: weather-api
      host: ${weatherapi.server.host}
      port: ${weatherapi.server.port}
      uri: http://${weatherapi.server.host}:${weatherapi.server.port}

spring.cloud.gateway:
  loadbalancer:
    use404: false
  routes:
  - id: openapi
    uri: ${gateway.server.url}
    predicates:
    - Path=/v3/api-docs/**
    filters:
    - RewritePath=/v3/api-docs/(?<path>.*), /$\{path}/v3/api-docs
  - id: weather-api
    uri: lb://weather-api
    predicates:
    - Path=/weather/**
    filters:
    - RewritePath=/weather/(?<path>.*), /$\{path}

springdoc:
  packages-to-scan:
  - io.github.mavaze.weathermap
  api-docs:
    # path: /v3/api-docs
    enabled: true
  swagger-ui:
    # path: /restdocs.html
    use-root-path: true
    oauth:
      client-id: gateway
      client-secret: secret # ignored if pkce is enabled
      app-name: weather-cloud-gateway
      # use-pkce-with-authorization-code-grant: true
    oauth2-redirect-url: ${gateway.server.url}/webjars/swagger-ui/oauth2-redirect.html

# logging:
#   level:
#     root: TRACE
#     org.apache.tomcat.util.net.NioEndpoint: OFF
